{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/Game/game.component.html","webpack:///./src/app/Player/player.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/Game/game.component.ts","webpack:///./src/app/Game/game.service.ts","webpack:///./src/app/Model/transaction.ts","webpack:///./src/app/Player/player.component.ts","webpack:///./src/app/Player/player.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/config/config.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"mainContainer rounded\\\">\\r\\n  <div class=\\\"homecontainer color-dark rounded\\\">\\r\\n    <div class=\\\"homecol1\\\">\\r\\n      <h6>Play Game</h6>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"buildcontainer color-light\\\">\\r\\n    <div class=\\\"col-md-16\\\">\\r\\n      <div class=\\\"homecol\\\">\\r\\n        <form [formGroup]=\\\"gamePage\\\">\\r\\n\\r\\n          <input type=\\\"button\\\" value=\\\"Hit\\\" [ngClass]=\\\"{disableButton: isStay}\\\" [disabled]=\\\"isStay\\\"\\r\\n            class=\\\"btnSubmitHit rounded\\\" (click)=\\\"Hit()\\\" />&nbsp;\\r\\n          <input type=\\\"button\\\" value=\\\"Stay\\\" [ngClass]=\\\"{disableButton: isStay}\\\" [disabled]=\\\"isStay\\\"\\r\\n            class=\\\"btnSubmitStay rounded\\\" (click)=\\\"Stay()\\\" />\\r\\n          <br><br>\\r\\n\\r\\n          <div class=\\\"gameContainerleft\\\">\\r\\n            <div class=\\\"gameHead\\\">{{name}}</div>\\r\\n            <div class=\\\"gameinnerContainer\\\">\\r\\n              <div *ngFor=\\\"let player of playedCards;let i=index;\\\">\\r\\n                <span class=\\\"suit\\\" [style.backgroundColor]=\\\"player.suit.color\\\"\\r\\n                  [innerHTML]=\\\"player.suit.name + ' ' + player.points\\\"></span>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"gamefooter\\\">\\r\\n              <div class=\\\"left\\\">\\r\\n                Points\\r\\n              </div>\\r\\n              <div class=\\\"right\\\">\\r\\n                {{PlayerTotal}}</div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"gameContainerright\\\">\\r\\n            <div class=\\\"gameHead\\\">Dealer</div>\\r\\n            <div class=\\\"gameinnerContainer\\\">\\r\\n              <div *ngFor=\\\"let player of cardsPlayedDeal;let i=index;\\\">\\r\\n                <span class=\\\"suit\\\" [style.backgroundColor]=\\\"player.suit.color\\\"\\r\\n                  [innerHTML]=\\\"player.suit.name + ' ' + player.points\\\"></span>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"gamefooter\\\">\\r\\n              <div class=\\\"left\\\">\\r\\n                Points\\r\\n              </div>\\r\\n              <div class=\\\"right\\\">\\r\\n                {{DealerTotal}}</div>\\r\\n            </div>\\r\\n          </div> <br><br>\\r\\n\\r\\n\\r\\n          <input type=\\\"button\\\" value=\\\"Play Again\\\" [ngClass]=\\\"{disableButton: playAgain}\\\" [disabled]=\\\"playAgain\\\"\\r\\n            class=\\\"btnSubmitHit rounded\\\" #closeAddExpenseModal (click)=\\\"PlayAgain()\\\" />&nbsp;\\r\\n          <input type=\\\"button\\\" value=\\\"View Report\\\" class=\\\"btnSubmitStay rounded\\\" (click)=\\\"Report('myModal')\\\"\\r\\n            [ngClass]=\\\"{disableButton: playAgain}\\\" [disabled]=\\\"playAgain\\\" />\\r\\n\\r\\n\\r\\n          <div class=\\\"message\\\">\\r\\n            <div class=\\\"default\\\" *ngIf=\\\"default\\\">\\r\\n              {{message}}\\r\\n            </div>\\r\\n            <div class=\\\"playerWin\\\" *ngIf=\\\"PlayerWin\\\">\\r\\n              {{message}}\\r\\n            </div>\\r\\n            <div class=\\\"burst\\\" *ngIf=\\\"Playerbust\\\">\\r\\n              {{message}}\\r\\n            </div>\\r\\n            <div class=\\\"burst\\\" *ngIf=\\\"Dealerbust\\\">\\r\\n              {{message}}\\r\\n            </div>\\r\\n            <div class=\\\"dealerWin\\\" *ngIf=\\\"DealerWin\\\">\\r\\n              {{message}}\\r\\n            </div>\\r\\n            <div class=\\\"dealerLost\\\" *ngIf=\\\"DealerLost\\\">\\r\\n              {{message}}\\r\\n            </div>\\r\\n            <div class=\\\"draw\\\" *ngIf=\\\"Draw\\\">\\r\\n              {{message}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"myModal\\\" class=\\\"modal\\\">\\r\\n  <div class=\\\"modal-content\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      Session Report\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n   \\r\\n      <table cellpadding=\\\"5\\\" style=\\\"width: 100%;text-align: center;\\\">\\r\\n        <tr class=\\\"trHeader\\\">\\r\\n          <td>Game No</td>\\r\\n          <td>Player Points</td>\\r\\n          <td>Dealer Points</td>\\r\\n          <td>Result</td>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let item of finalResult\\\">\\r\\n          <td>{{item.GameNo}}</td>\\r\\n          <td>{{item.PlayerPoints}}</td>\\r\\n          <td>{{item.DealerPoints}}</td>\\r\\n          <td>{{item.Result}}</td>\\r\\n        </tr>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <input type=\\\"button\\\" value=\\\"Close\\\" class=\\\"btnSubmitStay rounded\\\" (click)=\\\"Close('myModal')\\\">\\r\\n      </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"mainContainer rounded\\\">\\r\\n  <div class=\\\"homecontainer color-dark rounded\\\">\\r\\n    <div class=\\\"homecol1\\\">\\r\\n\\r\\n      <h6>Player</h6>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"buildcontainer color-light\\\">\\r\\n    <div class=\\\"col-md-16\\\">\\r\\n      <div class=\\\"homecol\\\">\\r\\n        <form [formGroup]=\\\"playerPage\\\">\\r\\n          <div class=\\\"label-container\\\">\\r\\n            <label>Please enter player name</label>\\r\\n          </div>\\r\\n          <div class=\\\"txt-container\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName='PlayerName' placeholder=\\\"Player Name\\\" value=\\\"\\\"\\r\\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.PlayerName.errors }\\\" />\\r\\n            <div *ngIf=\\\"submitted && f.PlayerName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.PlayerName.errors.required\\\">Player Name is required</div>\\r\\n            </div>\\r\\n          </div> <br>\\r\\n          <div class=\\\"label-container\\\">\\r\\n          </div>\\r\\n          <div class=\\\"txt-container\\\">\\r\\n            <input type=\\\"submit\\\" class=\\\"btnSubmit rounded\\\" (click)=\\\"submit(playerPage)\\\" value=\\\"Submit\\\" /> &nbsp;\\r\\n            <input type=\\\"reset\\\" class=\\\"btnSubmit rounded\\\" value=\\\"Reset\\\" />\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { GameService } from './game.service';\r\nimport { Tramsaction } from '../Model/transaction';\r\nimport {config}from '../config/config'\r\n@Component({\r\n    selector: 'app-game',\r\n    templateUrl: './game.component.html',\r\n})\r\n\r\nexport class GameComponent implements OnInit {\r\n\r\n    public name: string;\r\n    public gamePage: FormGroup;\r\n    public card: [] = [];\r\n    public originalCardList: [] = [];\r\n    public playedCards: any[] = [];\r\n    public suit: Observable<any>;\r\n    public DealerPoints: number = 0;\r\n    public PlayerPoints: number = 0;\r\n    public playerStanding: boolean;\r\n    public trans: Tramsaction;\r\n    public Playerbust: boolean = false;\r\n    public cardId: number;\r\n    public Dealerbust: boolean;\r\n    public DealerTotal: number = 0;\r\n    public PlayerTotal: number = 0;\r\n    public message: string;\r\n    public PlayerWin: boolean = false;\r\n    public DealerWin: Boolean = false;\r\n    public DealerLost: boolean = false;\r\n    public PlayerLost: boolean = false;\r\n    public cardsPlayed: any[] = [];\r\n    public cardsPlayedDeal: any[] = [];\r\n    public isStay: boolean = false;\r\n    public isStarted: boolean = false;\r\n    public isDealerPlaying: boolean = false;\r\n    public playAgain: boolean = false;\r\n    public transaction: any[] = [];\r\n    public isGameOver: boolean = false;\r\n    public result: any;\r\n    public default: boolean = false;\r\n    public finalResult: any[] = [];\r\n    public GameNo: number = 0;\r\n\r\n\r\n    constructor(private formBuilder: FormBuilder, private gameService: GameService, private config :config) { }\r\n\r\n    \r\n    ngOnInit(): void {\r\n        this.initializeForm();\r\n        this.name = localStorage.getItem(\"playerName\");\r\n        this.getCardDetails();\r\n    }\r\n    \r\n\r\n    initializeForm() {\r\n        this.gamePage = this.formBuilder.group({\r\n            PlayerName: new FormControl('', [Validators.required])\r\n        });\r\n    }\r\n\r\n    //Set initial cards\r\n    //2 for Player and 1 for Dealer\r\n    setInitialCards() {\r\n        this.playAgain = true;\r\n        this.cardsPlayed = [];\r\n        this.cardsPlayedDeal = [];\r\n        this.dealCard(false, true);\r\n        this.dealCard(false, true);\r\n        this.dealCard(true, true);\r\n    }\r\n\r\n    //Get 52 card details from database\r\n    getCardDetails() {\r\n        if (!this.isGameOver) {\r\n            this.default = true;            \r\n            this.message = this.config.getMessage(0);\r\n        }        \r\n        //if the cards are already fetched from db for the first time then get it from Original list\r\n        if (this.originalCardList.length > 0) {\r\n            this.originalCardList.forEach(element => {\r\n                this.card.push(element);\r\n            });\r\n            this.setInitialCards();\r\n        }\r\n        else {\r\n            //This will fetch all the 52 cards from database\r\n            this.gameService.getCard().subscribe(data => {\r\n                this.card = data;\r\n                this.originalCardList = data;\r\n                this.setInitialCards();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    //Hit to draw a random card\r\n    Hit() {\r\n        if (this.GameNo == 0) {\r\n            this.GameNo = this.GameNo + 1;\r\n        }\r\n        this.isStarted = true;\r\n        this.dealCard(false, false);\r\n    }\r\n\r\n    //Player Stay and dealer will start playing\r\n    Stay() {\r\n        if (this.GameNo == 0) {\r\n            this.GameNo = this.GameNo + 1;\r\n        }\r\n\r\n        if (this.PlayerTotal < this.DealerTotal) {\r\n            this.resetValues();\r\n            this.DealerWin = true;\r\n            this.isGameOver = true;\r\n            this.message = this.config.getMessage(2);\r\n            this.GetResult();\r\n        } else\r\n            if (!this.isGameOver) {\r\n                this.isStay = true;\r\n                this.isDealerPlaying = true;\r\n                this.playerStands();\r\n            }\r\n    }\r\n\r\n    //It will start new game in same session \r\n    PlayAgain() {\r\n        this.GameNo = this.GameNo + 1;\r\n        this.playAgain = true;\r\n        this.isDealerPlaying = false;\r\n        this.isStay = false;\r\n        this.isStarted = true;\r\n        this.resetValues();\r\n        this.message = \"\";\r\n        this.cardsPlayed = [];\r\n        this.cardsPlayedDeal = [];\r\n        this.card = [];\r\n        this.DealerPoints = 0;\r\n        this.PlayerPoints = 0\r\n        this.PlayerTotal = 0;\r\n        this.DealerTotal = 0;\r\n        this.playedCards = [];\r\n        this.gamePage.reset();        \r\n        this.PlayerWin = false;\r\n        this.DealerWin = false;\r\n        this.DealerLost = false;\r\n        this.PlayerLost = false;\r\n        this.default = true;\r\n        this.getCardDetails();\r\n\r\n    }\r\n\r\n    //Deal the card for Player and Dealer\r\n    async dealCard(isForDealer: boolean, isfirst: boolean) {\r\n        if (!isForDealer) {\r\n            this.isDealerPlaying = false;\r\n            this.playedCards.push(this.extractCardFromPack());\r\n            this.PlayerTotal = 0;\r\n            this.playedCards.forEach(element => {\r\n                this.PlayerTotal = this.PlayerTotal + element[\"points\"];\r\n                this.PlayerPoints = element[\"points\"];\r\n            });\r\n\r\n        }\r\n        else {\r\n            this.cardsPlayedDeal.push(this.extractCardFromPack());\r\n            this.DealerTotal = 0;\r\n            this.cardsPlayedDeal.forEach(element => {\r\n                this.DealerTotal = this.DealerTotal + element[\"points\"];\r\n                this.DealerPoints = element[\"points\"];\r\n            });\r\n        }\r\n\r\n        if (!isForDealer) {\r\n            this.trans = new Tramsaction(0, this.PlayerPoints, 0, +localStorage.getItem(\"SessionId\"), this.cardId, +localStorage.getItem(\"gameId\"));\r\n        }\r\n        else {\r\n            this.trans = new Tramsaction(0, 0, this.DealerPoints, +localStorage.getItem(\"SessionId\"), this.cardId, +localStorage.getItem(\"gameId\"));\r\n        }\r\n\r\n        this.transaction.push(this.trans);\r\n\r\n        if (isForDealer && !isfirst) {\r\n\r\n            if (!this.isGameOver) {\r\n\r\n                while (this.DealerTotal < 17 && this.DealerTotal <= this.PlayerTotal) {\r\n                    await new Promise(resolve => setTimeout(() => resolve(), 1200)).then(() => this.dealCard(true, false));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.PlayerTotal > 21) {\r\n            this.resetValues();\r\n            this.Playerbust = true;\r\n            this.isGameOver = true;\r\n            this.isStay = true;            \r\n            this.message = this.config.getMessage(3);\r\n        }\r\n        else if (this.DealerTotal > 21) {\r\n            this.resetValues();\r\n            this.Dealerbust = true;\r\n            this.isGameOver = true;\r\n            this.isDealerPlaying = false;            \r\n            this.message = this.config.getMessage(4);\r\n        }\r\n\r\n        if (this.isGameOver) {\r\n            this.GetResult();\r\n            debugger;\r\n             //Save this information into database\r\n            this.gameService.saveTransaction(this.transaction);\r\n        }\r\n        if (this.isDealerPlaying == true && this.playedCards.length >= 2 && !this.isGameOver) {\r\n            this.calculateResult();\r\n        }     \r\n    }\r\n\r\n    //this is executed when the player stands\r\n    playerStands(): void {\r\n        this.playerStanding = true;\r\n        this.dealCard(true, false);\r\n    }\r\n\r\n    //Extract random card from the pack\r\n    extractCardFromPack() {\r\n        //step 1, extract a random card from the remaining ones in the pack\r\n        let randomCardIndex = Math.floor(Math.random() * (this.card.length - 1)) + 0;\r\n\r\n        let cardToReturn = this.card[randomCardIndex];\r\n\r\n        if (cardToReturn === undefined) {\r\n            cardToReturn = this.extractCardFromPack();\r\n        }\r\n        //remove the card from deck\r\n        this.card.splice(randomCardIndex, 1);\r\n        this.cardId = cardToReturn[\"card_Id\"];\r\n\r\n        return cardToReturn;\r\n    }\r\n\r\n    //Calculate result\r\n    calculateResult() {\r\n        this.message = \"\";\r\n        if (this.DealerTotal < this.PlayerTotal) {\r\n            this.resetValues();\r\n            this.PlayerWin = true;\r\n            this.isGameOver = true;            \r\n            this.message = this.config.getMessage(1);\r\n        }\r\n        else if (this.isDealerPlaying && this.DealerTotal > this.PlayerTotal) {\r\n            this.resetValues();\r\n            this.DealerWin = true;\r\n            this.isGameOver = true;            \r\n            this.message = this.config.getMessage(2);\r\n        }\r\n        else if (this.PlayerTotal == this.DealerTotal) {\r\n            this.resetValues();\r\n            this.DealerWin = true;\r\n            this.isGameOver = true;\r\n            this.message = this.config.getMessage(5);\r\n        }\r\n\r\n        if (this.isGameOver) {         \r\n            this.GetResult();\r\n        }\r\n\r\n    }\r\n\r\n    //This will show the result in popup\r\n    GetResult() {\r\n        let result = {\r\n            GameNo: this.GameNo,\r\n            PlayerPoints: this.PlayerTotal,\r\n            DealerPoints: this.DealerTotal,\r\n            Result: this.message\r\n        };\r\n\r\n        if (this.finalResult.length === 0) {\r\n            this.finalResult.push(result);\r\n        } else {\r\n            var exisintgameNo = this.finalResult.filter(resultValue => resultValue.GameNo === this.GameNo);\r\n            if (exisintgameNo.length === 0) {\r\n                this.finalResult.push(result);\r\n            }\r\n        }\r\n        this.isGameOver = false;\r\n\r\n    }\r\n\r\n    resetValues() {\r\n        this.default = false;\r\n        this.playAgain = false;\r\n        this.PlayerWin = false;\r\n        this.DealerWin = false;\r\n        this.Dealerbust = false;\r\n        this.Playerbust = false;\r\n    }\r\n\r\n    //Open the result popup\r\n    Report(id: string) {\r\n        // Get the modal\r\n        var modal = document.getElementById(\"myModal\");\r\n        modal.style.display = \"block\";\r\n    }\r\n\r\n    //Close the result popup\r\n    Close(id: string) {\r\n        // Get the modal\r\n        var modal = document.getElementById(\"myModal\");\r\n        modal.style.display = \"none\";\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { config } from '../config/config';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { throwError as observableThrowError } from 'rxjs';\r\nimport { RequestOptions,Headers,Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class GameService {\r\n\r\n    constructor(private http: Http, private config: config) { };\r\n\r\n    getCard(): Observable<any> {\r\n        return this.http.get(this.config.getAPIresult() + \"/api/card\").pipe(\r\n            map((response) => {\r\n                return response;\r\n            }),\r\n            catchError(this.handleError));\r\n    }\r\n\r\n    saveTransaction(transaction): Observable<any> {\r\n        debugger;\r\n        let body = JSON.stringify(transaction);\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n        });\r\n        let options = new RequestOptions({\r\n            headers: headers\r\n        });\r\n\r\n        return this.http.post(this.config.getAPIresult() + \"api/transaction\",  body, options)\r\n            .pipe(map(response => {              \r\n                return response;\r\n            }),\r\n                catchError(this.handleError));\r\n    }\r\n\r\n    private handleError(error: Response | any) {      \r\n        let errMsg: string;\r\n        if (error instanceof Response) {\r\n            const body = error.json() || '';\r\n            const err = body || JSON.stringify(body);\r\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n        } else {\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        console.log(errMsg);\r\n        return observableThrowError(errMsg);\r\n    }\r\n}\r\n","export class Tramsaction{\r\n    constructor(\r\n        public Transaction_Id:number,\r\n        public PlayerScore:number,\r\n        public DealerScore:number,\r\n        public Session_Id:number,\r\n        public Card_Id :number,\r\n        public Game_Id:number\r\n    ){}\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UUID } from 'angular2-uuid';\r\nimport { PlayerService } from './player.service';\r\n\r\n@Component({\r\n    selector: 'app-player',\r\n    templateUrl: './player.component.html',\r\n})\r\n\r\nexport class PlayerCompoent implements OnInit {\r\n\r\n    public header: string;\r\n    public playerPage: FormGroup;\r\n    public submitted = false;\r\n    uuidValue: string;\r\n    public playerName: string;\r\n    public constructor(private formBuilder: FormBuilder, private router: Router,\r\n        private playerService: PlayerService) { }\r\n\r\n\r\n    ngOnInit(): void {\r\n        localStorage.clear();\r\n        this.header = \"Player\";\r\n        this.initializeForm();\r\n    }\r\n\r\n    initializeForm() {\r\n        this.playerPage = this.formBuilder.group({\r\n            PlayerName: new FormControl('', [Validators.required])\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() {\r\n        return this.playerPage.controls;\r\n    }\r\n\r\n    submit(player) {\r\n        debugger;\r\n        localStorage.setItem(\"playerName\", player.value.PlayerName);\r\n\r\n        this.playerName = player.value.PlayerName;\r\n        if (localStorage.getItem(\"SessionId\") == null || localStorage.getItem(\"SessionId\") === undefined) {\r\n            this.generateSessionId();\r\n            localStorage.setItem(\"SessionId\", this.uuidValue);\r\n        }\r\n        //Save user name in player table\r\n        this.savePlayerData();\r\n    }\r\n\r\n    //Save user name in player table\r\n    async savePlayerData() {\r\n        debugger;\r\n        await this.playerService.savePlayer(this.playerName).subscribe(\r\n            data => {\r\n                if (data.status == 200 || data.status == 204) {\r\n\r\n                    this.router.navigateByUrl(\"game\");\r\n                }\r\n                else if (data.statusCode == 417) {\r\n                    //Show Error here     \r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    generateSessionId() {\r\n        this.uuidValue = UUID.UUID();\r\n        return this.uuidValue;\r\n    }\r\n\r\n    reset() {\r\n        this.playerPage.reset();\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport{config} from '../config/config';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { map, catchError } from \"rxjs/operators\";\r\nimport { throwError as observableThrowError } from 'rxjs';\r\nimport { RequestOptions, Headers,Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class PlayerService{\r\n\r\n    constructor(private http: Http, private config: config)\r\n    {};\r\n\r\n    savePlayer(playerName): Observable<any> {\r\n        let body = JSON.stringify(playerName);\r\n        let headers = new Headers({\r\n            'Content-Type': 'application/json'\r\n        });\r\n        let options = new RequestOptions({            \r\n            headers: headers\r\n        });      \r\n        return this.http.post(this.config.getAPIresult() + \"api/player\", body, options)\r\n            .pipe(map(response => {\r\n              \r\n                return response;\r\n            }),\r\n                catchError(this.handleError));\r\n    }\r\n\r\n    private handleError(error: Response | any) {    \r\n        let errMsg: string;\r\n        if (error instanceof Response) {\r\n            const body = error.json() || '';\r\n            const err = body || JSON.stringify(body);\r\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n        } else {\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        console.log(errMsg);\r\n        return observableThrowError(errMsg);\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PlayerCompoent } from './Player/player.component';\nimport { GameComponent } from './Game/game.component';\n\nconst routes: Routes = [\n  {\n    path:\"\",\n    component:PlayerCompoent\n  },\n  {\n    path:\"game\",\n    component:GameComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'BlackJack';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {PlayerCompoent}from './Player/player.component'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { GameComponent } from './Game/game.component';\nimport{GameService} from './Game/game.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport {config} from './config/config';\nimport {PlayerService} from '../app/Player/player.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlayerCompoent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule\n    \n  ],\n  providers: [GameService,config,PlayerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\n\r\nexport enum message {\r\n    \"Game is in progress...\",\r\n    \"Player wins, dealer looses\",\r\n    \"Dealer wins, player looses\",\r\n    \"Player bust, dealer wins\",\r\n    \"Dealer bust, player wins\",\r\n    \"Draw\"\r\n}\r\n\r\n@Injectable()\r\nexport class config {\r\n    private APIresult: string = \"https://localhost:44344/\"\r\n    private msg = message;\r\n\r\n    constructor() {\r\n\r\n\r\n    }\r\n\r\n    getMessage(item) {\r\n        return this.msg[item];\r\n    }\r\n\r\n    public getAPIresult() {\r\n        return this.APIresult;\r\n    }\r\n\r\n\r\n\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}